{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Create.js\";\n\n/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-11T17:56:06+00:00\n */\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst Genre = props => React.createElement(\"option\", {\n  value: props.genre._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \" \", props.genre.name, \" \");\n\nconst Author = props => React.createElement(\"option\", {\n  value: props.author._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.author.name);\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.author_id);\n    };\n\n    this.onAddAuthor = e => {\n      const target = e.target; // const value = target.as === 'selected' ? target.selected : target.value;\n\n      const name = target.name;\n      var options = target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      } //  this.props.someCallback(value);\n\n\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addGenre = e => {\n      const target = e.target; // const value = target.as === 'selected' ? target.selected : target.value;\n\n      const name = target.name;\n      var options = target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      } //  this.props.someCallback(value);\n\n\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.cover = e => {\n      axios.post(\"http://localhost:4000/upload\").then(res => {\n        console.log(res.data);\n        this.setState({\n          cover: res.data\n        });\n        window.location = \"/\";\n      }).catch(err => {\n        console.log(err); //  window.location = '/books/create';\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      console.log(this.state.author_id);\n      let genreJSON = this.state.genre_id;\n      let authorJSON = this.state.author_id;\n      const book = {\n        isbn: this.state.isbn,\n        title: this.state.title,\n        genre_id: genreJSON,\n        author_id: authorJSON,\n        cover: this.state.cover\n      };\n      console.log(book);\n      axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"jwtToken\");\n      axios.post(\"http://localhost:4000/books\", book).then(res => {\n        console.log(res.data);\n        window.location = \"/\";\n      }).catch(err => {\n        console.log(err); //  window.location = '/books/create';\n      }); // window.location = '/';\n    };\n\n    this.state = {\n      isbn: \"\",\n      title: \"\",\n      genres: [],\n      genre_id: [],\n      authors: [],\n      authors_id: [],\n      cover: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"jwtToken\");\n    axios.get(`http://localhost:4000/authors`).then(authors => {\n      console.log(authors);\n      this.setState({\n        authors: authors.data\n      });\n    });\n    axios.get(`http://localhost:4000/genres`).then(genres => {\n      console.log(genres);\n      this.setState({\n        genres: genres.data\n      });\n    });\n  }\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return React.createElement(Genre, {\n        genre: currentGenre,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    });\n  }\n\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return React.createElement(Author, {\n        author: currentAuthor,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Add new Book\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalISBN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"ISBN\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ISBN\",\n      name: \"isbn\",\n      value: this.state.isbn,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      placeholder: \"Genre\",\n      name: \"genre_id\",\n      onChange: this.addGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.genreList())))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalAuthor\",\n      className: \"custome-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Cover Upload\"), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"file\",\n      placeholder: \"cover\",\n      name: \"cover\",\n      onChange: this.cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Add Book\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Create.js"],"names":["React","Component","axios","Form","Row","Col","Button","InputGroup","Badge","Genre","props","genre","_id","name","Author","author","BookCreate","constructor","handleInputChange","e","target","value","type","checked","console","log","setState","state","author_id","onAddAuthor","options","i","l","length","selected","push","addGenre","cover","post","then","res","data","window","location","catch","err","onSubmit","preventDefault","genreJSON","genre_id","authorJSON","book","isbn","title","defaults","headers","common","localStorage","getItem","genres","authors","authors_id","componentDidMount","get","genreList","map","currentGenre","index","authorList","currentAuthor","render","span","offset"],"mappings":"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","sourcesContent":["/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-11T17:56:06+00:00\n */\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Badge from \"react-bootstrap/Badge\";\n\nconst Genre = props => (\n  <option value={props.genre._id}> {props.genre.name} </option>\n);\nconst Author = props => (\n  <option value={props.author._id}>{props.author.name}</option>\n);\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isbn: \"\",\n      title: \"\",\n      genres: [],\n      genre_id: [],\n      authors: [],\n      authors_id: [],\n      cover: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\n      \"jwtToken\"\n    );\n    axios.get(`http://localhost:4000/authors`).then(authors => {\n      console.log(authors);\n      this.setState({\n        authors: authors.data\n      });\n    });\n    axios.get(`http://localhost:4000/genres`).then(genres => {\n      console.log(genres);\n      this.setState({\n        genres: genres.data\n      });\n    });\n  }\n\n  handleInputChange = e => {\n    const target = e.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.author_id);\n  };\n\n  onAddAuthor = e => {\n    const target = e.target;\n    // const value = target.as === 'selected' ? target.selected : target.value;\n    const name = target.name;\n\n    var options = target.options;\n    var value = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    //  this.props.someCallback(value);\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  addGenre = e => {\n    const target = e.target;\n    // const value = target.as === 'selected' ? target.selected : target.value;\n    const name = target.name;\n\n    var options = target.options;\n    var value = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    //  this.props.someCallback(value);\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  cover = e => {\n    axios\n      .post(\"http://localhost:4000/upload\")\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          cover: res.data\n        });\n        window.location = \"/\";\n      })\n      .catch(err => {\n        console.log(err);\n        //  window.location = '/books/create';\n      });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    console.log(this.state.author_id);\n    let genreJSON = this.state.genre_id;\n    let authorJSON = this.state.author_id;\n\n    const book = {\n      isbn: this.state.isbn,\n      title: this.state.title,\n      genre_id: genreJSON,\n      author_id: authorJSON,\n      cover: this.state.cover\n    };\n\n    console.log(book);\n    axios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\n      \"jwtToken\"\n    );\n\n    axios\n      .post(\"http://localhost:4000/books\", book)\n      .then(res => {\n        console.log(res.data);\n        window.location = \"/\";\n      })\n      .catch(err => {\n        console.log(err);\n        //  window.location = '/books/create';\n      });\n\n    // window.location = '/';\n  };\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return <Genre genre={currentGenre} key={index} />;\n    });\n  }\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return <Author author={currentAuthor} key={index} />;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Add new Book</h3>\n        <Form onSubmit={this.onSubmit} encType=\"multipart/form-data\">\n          <Form.Group as={Row} controlId=\"formHorizontalISBN\">\n            <Form.Label column sm={2}>\n              ISBN\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"ISBN\"\n                name=\"isbn\"\n                value={this.state.isbn}\n                onChange={this.handleInputChange}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n            <Form.Label column sm={2}>\n              Title\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Title\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handleInputChange}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formHorizontalGenre\">\n            <Form.Label column sm={2}>\n              Genre\n            </Form.Label>\n            <Col sm={4}>\n              <InputGroup>\n                <Form.Control\n                  as=\"select\"\n                  placeholder=\"Genre\"\n                  name=\"genre_id\"\n                  onChange={this.addGenre}\n                >\n                  {this.genreList()}\n                </Form.Control>\n              </InputGroup>\n            </Col>\n          </Form.Group>\n\n          <Form.Group\n            as={Row}\n            controlId=\"formHorizontalAuthor\"\n            className=\"custome-file\"\n          >\n            <Form.Label column sm={2}>\n              Cover Upload\n            </Form.Label>\n            <Col sm={8}>\n              {/* <InputGroup> */}\n              <Form.Control\n                type=\"file\"\n                placeholder=\"cover\"\n                name=\"cover\"\n                onChange={this.cover}\n              ></Form.Control>\n              {/* </InputGroup> */}\n              {/* <div class=\"custom-file\"> */}\n              {/* <input\n                type=\"file\"\n                class=\"custom-file-input\"\n                id=\"validatedCustomFile\"\n                required\n              />\n              <label class=\"custom-file-label\" for=\"validatedCustomFile\">\n                Choose file...\n              </label>\n              <div class=\"invalid-feedback\">\n                Example invalid custom file feedback\n              </div> */}\n              {/* </div> */}\n            </Col>\n          </Form.Group>\n\n          <br />\n          <Form.Group as={Row}>\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\">Add Book</Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}