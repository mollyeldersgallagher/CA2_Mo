{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Index.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport { Card, ListGroup, ListGroupItem, CardColumns, Button } from \"react-bootstrap\";\nimport defaultCover from \"../../placeholder.png\";\n\nconst Book = props => React.createElement(Card, {\n  style: {\n    width: \"18rem\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Card.Img, {\n  variant: \"top\",\n  src: defaultCover,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(Card.Body, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Card.Title, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, props.book.title), React.createElement(Card.Text, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")), React.createElement(Card.Body, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Card.Link, {\n  href: `books/${props.book._id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Show Book\")), React.createElement(Card.Footer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"small\", {\n  className: \"text-muted\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, props.book.lastUpdated)));\n\nexport default class BookIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      loggedIn: localStorage.getItem(\"jwtToken\") !== null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:4000/books/\").then(response => {\n      console.log(response);\n      this.setState({\n        books: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  bookList() {\n    return this.state.books.map(b => {\n      return React.createElement(Book, {\n        book: b,\n        key: b.isbn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    //const loggedIn = this.props.loggedIn;\n    console.log(this.state.loggedIn);\n    return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Book List\"), React.createElement(React.Fragment, null, this.state.loggedIn ? React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Add Book\") : React.createElement(React.Fragment, null, React.createElement(Button, {\n      as: Link,\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Login to Create\")), React.createElement(CardColumns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.bookList())));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Index.js"],"names":["React","Component","axios","Table","Link","Card","ListGroup","ListGroupItem","CardColumns","Button","defaultCover","Book","props","width","book","title","_id","lastUpdated","BookIndex","constructor","state","books","loggedIn","localStorage","getItem","componentDidMount","get","then","response","console","log","setState","data","catch","error","bookList","map","b","isbn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,MALF,QAMO,iBANP;AAOA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,oBAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,GAAN;AAAU,EAAA,OAAO,EAAC,KAAlB;AAAwB,EAAA,GAAG,EAAEH,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAaE,KAAK,CAACE,IAAN,CAAWC,KAAxB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAFF,CAFF,EASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD,CAAM,IAAN;AAAW,EAAA,IAAI,EAAG,SAAQH,KAAK,CAACE,IAAN,CAAWE,GAAI,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CATF,EAaE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAO,EAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BJ,KAAK,CAACE,IAAN,CAAWG,WAA1C,CADF,CAbF,CADF;;AAoBA,eAAe,MAAMC,SAAN,SAAwBjB,SAAxB,CAAkC;AAC/CkB,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKQ,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC;AAFpC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBvB,IAAAA,KAAK,CACFwB,GADH,CACO,8BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AACZV,QAAAA,KAAK,EAAEO,QAAQ,CAACI;AADJ,OAAd;AAGD,KAPH,EAQGC,KARH,CAQSC,KAAK,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAVH;AAWD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKf,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,CAAC,IAAI;AAC/B,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,CAAZ;AAAe,QAAA,GAAG,EAAEA,CAAC,CAACC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,QAAvB;AACA,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,0CACG,KAAKF,KAAL,CAAWE,QAAX,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,0CACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAElB,IAAZ;AAAkB,MAAA,EAAE,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAJJ,EAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAK+B,QAAL,EAAd,CAXF,CAFF,CADF;AAkBD;;AAnD8C","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  CardColumns,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport defaultCover from \"../../placeholder.png\";\r\n\r\nconst Book = props => (\r\n  <Card style={{ width: \"18rem\" }}>\r\n    <Card.Img variant=\"top\" src={defaultCover} />\r\n    <Card.Body>\r\n      <Card.Title>{props.book.title}</Card.Title>\r\n      <Card.Text>\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content.\r\n      </Card.Text>\r\n    </Card.Body>\r\n    <Card.Body>\r\n      <Card.Link href={`books/${props.book._id}`}>Show Book</Card.Link>\r\n      {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <small className=\"text-muted\">{props.book.lastUpdated}</small>\r\n    </Card.Footer>\r\n  </Card>\r\n);\r\n\r\nexport default class BookIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      books: [],\r\n      loggedIn: localStorage.getItem(\"jwtToken\") !== null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:4000/books/\")\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          books: response.data\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  bookList() {\r\n    return this.state.books.map(b => {\r\n      return <Book book={b} key={b.isbn} />;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //const loggedIn = this.props.loggedIn;\r\n    console.log(this.state.loggedIn);\r\n    return (\r\n      <>\r\n        <h3>Book List</h3>\r\n        <>\r\n          {this.state.loggedIn ? (\r\n            <Button>Add Book</Button>\r\n          ) : (\r\n            <>\r\n              <Button as={Link} to=\"/register\">\r\n                Login to Create\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          <CardColumns>{this.bookList()}</CardColumns>\r\n        </>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}