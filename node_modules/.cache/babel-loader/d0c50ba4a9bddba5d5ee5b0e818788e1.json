{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Show.js\";\n\n/**\n * @Date:   2020-02-03T10:14:00+00:00\n * @Last modified time: 2020-02-03T12:55:12+00:00\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst Genre = props => React.createElement(Badge, {\n  variant: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, props.genre);\n\nconst Author = props => React.createElement(Badge, {\n  variant: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.author);\n\nexport default class BookShow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      book: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    axios.get(`http://localhost:4000/books/${id}`).then(response => {\n      console.log(response);\n      this.setState({\n        book: response.data,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  genreList() {\n    return this.state.book.genre.map((currentGenre, index) => {\n      return React.createElement(Genre, {\n        genre: currentGenre.name,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n  }\n\n  authorList() {\n    console.log(this.state.author);\n    console.log(this.state.book.author);\n    return this.state.book.author.map((currentAuthor, index) => {\n      return React.createElement(Author, {\n        author: currentAuthor.name,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          book = _this$state.book,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      as: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, book.title, \" \", React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.genreList())), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Synopsis\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"There is no synopsis in the DB\"), React.createElement(Button, {\n      as: Link,\n      to: \"/\",\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"View all books\")), React.createElement(Card.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.authorList()))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Show.js"],"names":["React","Component","axios","Link","Badge","Card","Button","Genre","props","genre","Author","author","BookShow","constructor","state","book","loading","componentDidMount","id","match","params","get","then","response","console","log","setState","data","catch","error","genreList","map","currentGenre","index","name","authorList","currentAuthor","render","title"],"mappings":"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","sourcesContent":["/**\n * @Date:   2020-02-03T10:14:00+00:00\n * @Last modified time: 2020-02-03T12:55:12+00:00\n */\n\n\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Badge from 'react-bootstrap/Badge'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nconst Genre = props => (\n  <Badge variant=\"light\">{props.genre}</Badge>\n)\nconst Author = props => (\n  <Badge variant=\"light\">{props.author}</Badge>\n)\n\nexport default class BookShow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      book: {},\n      loading: true\n    };\n\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    axios.get(`http://localhost:4000/books/${id}`)\n    .then(response => {\n      console.log(response);\n      this.setState({\n        book: response.data,\n        loading: false\n      })\n\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n\n  genreList() {\n    return this.state.book.genre.map((currentGenre, index) => {\n      return <Genre genre={currentGenre.name} key={index} />;\n    })\n  }\n  authorList() {\n    console.log(this.state.author);\n    console.log(this.state.book.author);\n      return this.state.book.author.map((currentAuthor, index) => {\n        return <Author author={currentAuthor.name} key={index} />;\n      })\n    }\n\n  render() {\n\n    const { book, loading } = this.state;\n\n    if (loading) {\n      return (\n      <div>\n        <h3>Loading...</h3>\n      </div>\n      )\n    }\n\n    return (\n    <div>\n    <br/>\n      <Card>\n      <Card.Header as=\"h5\">{book.title} <span className=\"float-right\">{ this.genreList() }</span></Card.Header>\n\n        <Card.Body>\n          <Card.Title>Synopsis</Card.Title>\n          <Card.Text>\n\n            There is no synopsis in the DB\n          </Card.Text>\n          <Button as={Link} to=\"/\" variant=\"primary\">View all books</Button>\n        </Card.Body>\n        <Card.Footer><span className=\"float-right\">{ this.authorList() }</span></Card.Footer>\n      </Card>\n\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}