{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Create.js\";\n\n/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-10T12:59:24+00:00\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\n\nconst Genre = props => React.createElement(Badge, {\n  variant: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.genre);\n\nconst Author = props => React.createElement(Badge, {\n  variant: \"light\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, props.author);\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onAddGenre = () => {\n      this.setState(state => {\n        const genre_id = [...state.genre_id, state.genreText];\n        return {\n          genre_id,\n          genreText: ''\n        };\n      });\n    };\n\n    this.onAddAuthor = () => {\n      this.setState(state => {\n        const author = [...state.author, state.authorText];\n        return {\n          author,\n          authorText: ''\n        };\n      });\n    };\n\n    this.onFileChange = e => {\n      this.setState({\n        cover: e.target.files\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let genreJSON = this.state.genres.map((name, index) => {\n        return {\n          name\n        };\n      });\n      let authorJSON = this.state.authors.map((name, index) => {\n        return {\n          name\n        };\n      });\n      const book = {\n        isbn: this.state.isbn,\n        title: this.state.title,\n        genre: genreJSON,\n        author: authorJSON,\n        cover: this.state.cover\n      };\n      console.log(book);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n      axios.post('http://localhost:4000/books/', book).then(res => {\n        console.log(res.data);\n        window.location = '/';\n      }).catch(err => {\n        console.log(err); //  window.location = '/books/create';\n      }); // window.location = '/';\n    };\n\n    this.state = {\n      isbn: '',\n      title: '',\n      genres: [],\n      genre_id: [],\n      genreText: '',\n      authors: [],\n      authors_id: [],\n      authorText: '',\n      cover: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get(`http://localhost:4000/books/authors`).then(result => {\n      console.log(result);\n      this.setState({\n        authors: result.data.authors\n      });\n    });\n    axios.get(`http://localhost:4000/books/genres`).then(result => {\n      console.log(result);\n      this.setState({\n        genres: result.data.genres\n      });\n    });\n  }\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return React.createElement(Genre, {\n        genre: currentGenre,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    });\n  }\n\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return React.createElement(Author, {\n        author: currentAuthor,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Add new Book\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalISBN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"ISBN\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ISBN\",\n      name: \"isbn\",\n      value: this.state.isbn,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Genres\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Genre\",\n      name: \"genreText\",\n      value: this.state.genreText,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onAddGenre,\n      variant: \"outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Add Genre\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.genreList())), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Author\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Author\",\n      name: \"authorText\",\n      value: this.state.authorText,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onAddAuthor,\n      variant: \"outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Add Author\"))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, this.authorList())), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Cover\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"file\",\n      placeholder: \"\",\n      name: \"Cover\",\n      onChange: this.onFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Add Book\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Create.js"],"names":["React","Component","axios","Form","Row","Col","Button","InputGroup","Badge","Genre","props","genre","Author","author","BookCreate","constructor","handleInputChange","e","target","value","type","checked","name","console","log","setState","onAddGenre","state","genre_id","genreText","onAddAuthor","authorText","onFileChange","cover","files","onSubmit","preventDefault","genreJSON","genres","map","index","authorJSON","authors","book","isbn","title","defaults","headers","common","localStorage","getItem","post","then","res","data","window","location","catch","err","authors_id","componentDidMount","get","result","genreList","currentGenre","authorList","currentAuthor","render","span","offset"],"mappings":"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","sourcesContent":["/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-10T12:59:24+00:00\n */\n\n\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Badge from 'react-bootstrap/Badge'\n\n\nconst Genre = props => (\n  <Badge variant=\"light\">{props.genre}</Badge>\n)\nconst Author = props => (\n  <Badge variant=\"light\">{props.author}</Badge>\n)\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isbn: '',\n      title: '',\n      genres: [],\n      genre_id: [],\n      genreText: '',\n      authors: [],\n      authors_id: [],\n      authorText: '',\n      cover: ''\n    };\n\n  }\n\n  componentDidMount(){\n\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get(`http://localhost:4000/books/authors`).then((result) => {\n      console.log(result);\n      this.setState({\n        authors: result.data.authors\n      })\n    })\n      axios.get(`http://localhost:4000/books/genres`).then((result) => {\n        console.log(result);\n        this.setState({\n          genres: result.data.genres\n        })\n    });\n  };\n\n  handleInputChange = e => {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onAddGenre = () => {\n    this.setState(state => {\n      const genre_id = [...state.genre_id, state.genreText];\n      return {\n        genre_id,\n        genreText: '',\n      };\n    });\n  };\n  onAddAuthor = () => {\n   this.setState(state => {\n     const author = [...state.author, state.authorText];\n     return {\n       author,\n       authorText: '',\n     };\n   });\n };\n  onFileChange = e => {\n    this.setState({\n      cover: e.target.files\n    });\n  };\n\n\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    let genreJSON = this.state.genres.map((name, index) => {\n      return {name};\n    })\n    let authorJSON = this.state.authors.map((name, index) => {\n      return {name};\n    })\n\n    const book = {\n      isbn: this.state.isbn,\n      title: this.state.title,\n      genre: genreJSON,\n      author: authorJSON,\n      cover: this.state.cover\n    }\n\n    console.log(book);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n\n    axios.post('http://localhost:4000/books/', book)\n      .then(res => {\n        console.log(res.data)\n        window.location = '/';\n      })\n      .catch(err => {\n        console.log(err)\n      //  window.location = '/books/create';\n    });\n\n    // window.location = '/';\n  };\n\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return <Genre genre={currentGenre} key={index} />;\n    })\n  }\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return <Author author={currentAuthor} key={index} />;\n    })\n  }\n\n  render() {\n\n    return (\n    <div>\n      <h3>Add new Book</h3>\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group as={Row} controlId=\"formHorizontalISBN\">\n          <Form.Label column sm={2}>\n            ISBN\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\" placeholder=\"ISBN\"\n              name=\"isbn\"\n              value={this.state.isbn}\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n          <Form.Label column sm={2}>\n            Title\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\" placeholder=\"Title\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalGenre\">\n          <Form.Label column sm={2}>\n            Genres\n          </Form.Label>\n          <Col sm={4}>\n            <InputGroup>\n              <Form.Control type=\"text\" placeholder=\"Genre\"\n                name=\"genreText\"\n                value={this.state.genreText}\n                onChange={this.handleInputChange}\n              />\n              <InputGroup.Append>\n                <Button onClick={this.onAddGenre} variant=\"outline-success\">Add Genre</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n        <Row>\n          <Col sm={{ span: 10, offset: 2 }}>\n            { this.genreList() }\n          </Col>\n        </Row>\n\n        <Form.Group as={Row} controlId=\"formHorizontalAuthor\">\n          <Form.Label column sm={2}>\n            Author\n          </Form.Label>\n          <Col sm={4}>\n            <InputGroup>\n              <Form.Control type=\"text\" placeholder=\"Author\"\n                name=\"authorText\"\n                value={this.state.authorText}\n                onChange={this.handleInputChange}\n              />\n              <InputGroup.Append>\n                <Button onClick={this.onAddAuthor} variant=\"outline-success\">Add Author</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n\n        <Row>\n          <Col sm={{ span: 10, offset: 2 }}>\n            { this.authorList() }\n          </Col>\n        </Row>\n        <Form.Group as={Row} controlId=\"formHorizontalover\">\n          <Form.Label column sm={2}>\n            Cover\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"file\" placeholder=\"\"\n              name=\"Cover\"\n\n              onChange={this.onFileChange}\n            />\n          </Col>\n        </Form.Group>\n        <br/>\n        <Form.Group as={Row}>\n          <Col sm={{ span: 10, offset: 2 }}>\n            <Button type=\"submit\">Add Book</Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}