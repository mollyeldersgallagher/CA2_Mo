{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Edit.js\";\n\n/**\r\n * @Date:   2020-01-28T01:14:02+00:00\r\n * @Last modified time: 2020-02-11T19:36:07+00:00\r\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\n\nconst Genre = props => React.createElement(\"option\", {\n  value: props.genre._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \" \", props.genre.name, \" \");\n\nconst Author = props => React.createElement(\"option\", {\n  value: props.author._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, props.author.name);\n\nexport default class BookEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onAddAuthor = e => {\n      const target = e.target; // const value = target.as === 'selected' ? target.selected : target.value;\n\n      const name = target.name;\n      var options = target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      } //  this.props.someCallback(value);\n\n\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addGenre = e => {\n      const target = e.target; // const value = target.as === 'selected' ? target.selected : target.value;\n\n      const name = target.name;\n      var options = target.options;\n      var value = [];\n\n      for (var i = 0, l = options.length; i < l; i++) {\n        if (options[i].selected) {\n          value.push(options[i].value);\n        }\n      } //  this.props.someCallback(value);\n\n\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      const book = {\n        isbn: this.state.isbn,\n        title: this.state.title,\n        genre_id: this.state.genre_id,\n        author_id: this.state.author_id\n      };\n      console.log(book);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n      axios.put(`http://localhost:4000/books/${id}`, book).then(res => {\n        console.log(res.data);\n        window.location = '/';\n        console.log(book);\n      }).catch(err => {\n        console.log(err); //    window.location = `/books/update/${id}`;\n      }); // window.location = '/';\n    };\n\n    this.state = {\n      isbn: '',\n      title: '',\n      genres: [],\n      genre_id: [],\n      authors: [],\n      authors_id: []\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    console.log(id);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get(`http://localhost:4000/books/${id}`).then(result => {\n      console.log(result);\n      this.setState({\n        isbn: result.data.isbn,\n        title: result.data.title,\n        genre_id: result.data.genre_id,\n        author_id: result.data.author_id\n      });\n    });\n    axios.get(`http://localhost:4000/authors`).then(authors => {\n      console.log(authors);\n      this.setState({\n        authors: authors.data\n      });\n    });\n    axios.get(`http://localhost:4000/genres`).then(genres => {\n      console.log(genres);\n      this.setState({\n        genres: genres.data\n      });\n    });\n  }\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return React.createElement(Genre, {\n        genre: currentGenre,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n    });\n  }\n\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return React.createElement(Author, {\n        author: currentAuthor,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Update Book\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalISBN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"ISBN\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ISBN\",\n      name: \"isbn\",\n      value: this.state.isbn,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      placeholder: \"Genre\",\n      name: \"genre_id\",\n      onChange: this.addGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.genreList())))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Author\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      placeholder: \"Author\",\n      name: \"author_id\",\n      onChange: this.onAddAuthor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.authorList())))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Update Book\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Edit.js"],"names":["React","Component","axios","Form","Row","Col","Button","InputGroup","Badge","Genre","props","genre","_id","name","Author","author","BookEdit","constructor","handleInputChange","e","target","value","type","checked","console","log","setState","onAddAuthor","options","i","l","length","selected","push","addGenre","onSubmit","preventDefault","id","match","params","book","isbn","state","title","genre_id","author_id","defaults","headers","common","localStorage","getItem","put","then","res","data","window","location","catch","err","genres","authors","authors_id","componentDidMount","get","result","genreList","map","currentGenre","index","authorList","currentAuthor","render","span","offset"],"mappings":"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","sourcesContent":["/**\r\n * @Date:   2020-01-28T01:14:02+00:00\r\n * @Last modified time: 2020-02-11T19:36:07+00:00\r\n */\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\nconst Genre = props => (\r\n  <option value={props.genre._id}> {props.genre.name} </option>\r\n)\r\nconst Author = props => (\r\n  <option value={props.author._id}>{props.author.name}</option>\r\n)\r\n\r\nexport default class BookEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isbn: '',\r\n      title: '',\r\n      genres: [],\r\n      genre_id: [],\r\n      authors: [],\r\n      authors_id: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { id } = this.props.match.params;\r\n    console.log(id);\r\n\r\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\r\n    axios.get(`http://localhost:4000/books/${id}`).then((result) => {\r\n      console.log(result);\r\n      this.setState({\r\n        isbn: result.data.isbn,\r\n        title: result.data.title,\r\n        genre_id: result.data.genre_id,\r\n        author_id:result.data.author_id\r\n      });\r\n    });\r\n\r\n    axios.get(`http://localhost:4000/authors`).then((authors) => {\r\n      console.log(authors);\r\n      this.setState({\r\n        authors: authors.data\r\n      })\r\n    })\r\n      axios.get(`http://localhost:4000/genres`).then((genres) => {\r\n        console.log(genres);\r\n        this.setState({\r\n          genres: genres.data\r\n        })\r\n    });\r\n\r\n\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    const target = e.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    console.log(`Input name ${name}. Input value ${value}.`);\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  onAddAuthor = e => {\r\n     const target = e.target;\r\n    // const value = target.as === 'selected' ? target.selected : target.value;\r\n     const name = target.name;\r\n\r\n    var options = target.options;\r\n    var value = [];\r\n    for (var i = 0, l = options.length; i < l; i++) {\r\n    if (options[i].selected) {\r\n      value.push(options[i].value);\r\n    }\r\n  }\r\n//  this.props.someCallback(value);\r\n\r\n    console.log(`Input name ${name}. Input value ${value}.`);\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n};\r\n\r\naddGenre = e => {\r\n  const target = e.target;\r\n // const value = target.as === 'selected' ? target.selected : target.value;\r\n  const name = target.name;\r\n\r\n var options = target.options;\r\n var value = [];\r\n for (var i = 0, l = options.length; i < l; i++) {\r\n if (options[i].selected) {\r\n   value.push(options[i].value);\r\n }\r\n}\r\n//  this.props.someCallback(value);\r\n\r\n console.log(`Input name ${name}. Input value ${value}.`);\r\n\r\n this.setState({\r\n   [name]: value\r\n });\r\n\r\n};\r\n  onSubmit = e => {\r\n\r\n    e.preventDefault();\r\n     const { id } = this.props.match.params;\r\n\r\n\r\n\r\n    const book = {\r\n      isbn: this.state.isbn,\r\n      title: this.state.title,\r\n      genre_id: this.state.genre_id,\r\n      author_id: this.state.author_id,\r\n\r\n    }\r\n    console.log(book)\r\n\r\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\r\n\r\n    axios.put(`http://localhost:4000/books/${id}`, book)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        window.location = '/';\r\n        console.log(book);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n    //    window.location = `/books/update/${id}`;\r\n    });\r\n\r\n    // window.location = '/';\r\n  };\r\n\r\n  genreList() {\r\n    return this.state.genres.map((currentGenre, index) => {\r\n      return <Genre genre={currentGenre} key={index} />;\r\n    })\r\n  }\r\n  authorList() {\r\n    return this.state.authors.map((currentAuthor, index) => {\r\n      return <Author author={currentAuthor} key={index} />;\r\n    })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n    <div>\r\n      <h3>Update Book</h3>\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group as={Row} controlId=\"formHorizontalISBN\">\r\n          <Form.Label column sm={2}>\r\n            ISBN\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control type=\"text\" placeholder=\"ISBN\"\r\n              name=\"isbn\"\r\n              value={this.state.isbn}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\r\n          <Form.Label column sm={2}>\r\n            Title\r\n          </Form.Label>\r\n          <Col sm={10}>\r\n            <Form.Control type=\"text\" placeholder=\"Title\"\r\n              name=\"title\"\r\n              value={this.state.title}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"formHorizontalGenre\">\r\n          <Form.Label column sm={2}>\r\n            Genre\r\n          </Form.Label>\r\n          <Col sm={4}>\r\n            <InputGroup>\r\n              <Form.Control as=\"select\" multiple placeholder=\"Genre\"\r\n                name=\"genre_id\"\r\n\r\n                onChange={this.addGenre}\r\n              >\r\n\r\n                { this.genreList() }\r\n\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row} controlId=\"formHorizontalAuthor\">\r\n          <Form.Label column sm={2}>\r\n            Author\r\n          </Form.Label>\r\n          <Col sm={4}>\r\n            <InputGroup>\r\n              <Form.Control as=\"select\" multiple placeholder=\"Author\"\r\n                name=\"author_id\"\r\n\r\n                onChange={this.onAddAuthor}\r\n              >\r\n\r\n        { this.authorList()}\r\n\r\n              </Form.Control>\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n\r\n\r\n        <br/>\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 10, offset: 2 }}>\r\n            <Button type=\"submit\">Update Book</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n    )\r\n  }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}