{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\N00160464\\\\Desktop\\\\CA2_Mo\\\\src\\\\views\\\\books\\\\Create.js\";\n\n/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-11T16:05:33+00:00\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\n\nconst Genre = props => React.createElement(\"option\", {\n  value: props.genre._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \" \", props.genre.name, \" \");\n\nconst Author = props => React.createElement(\"option\", {\n  value: props.author._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, props.author.name);\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const target = e.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.author_id);\n    };\n\n    this.onAddAuthor = e => {\n      const target = e.target;\n      const value = target.type === 'selected' ? target.selected : target.value;\n      const name = target.name;\n      console.log(`Input name ${name}. Input value ${value}.`);\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.author_id);\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      let genreJSON = this.state.genres.map((name, index) => {\n        return {\n          name\n        };\n      });\n      let authorJSON = this.state.authors.map((name, index) => {\n        return {\n          name\n        };\n      });\n      const book = {\n        isbn: this.state.isbn,\n        title: this.state.title,\n        genre: genreJSON,\n        author: authorJSON,\n        cover: this.state.cover\n      };\n      console.log(book);\n      axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n      axios.post('http://localhost:4000/books/', book).then(res => {\n        console.log(res.data);\n        window.location = '/';\n      }).catch(err => {\n        console.log(err); //  window.location = '/books/create';\n      }); // window.location = '/';\n    };\n\n    this.state = {\n      isbn: '',\n      title: '',\n      genres: [],\n      genre_id: [],\n      authors: [],\n      authors_id: []\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get(`http://localhost:4000/books/authors`).then(result => {\n      console.log(result);\n      this.setState({\n        authors: result.data\n      });\n    });\n    axios.get(`http://localhost:4000/books/genres`).then(genres => {\n      console.log(genres);\n      this.setState({\n        genres: genres.data\n      });\n    });\n  }\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return React.createElement(Genre, {\n        genre: currentGenre,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n    });\n  }\n\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return React.createElement(Author, {\n        author: currentAuthor,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Add new Book\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalISBN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"ISBN\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"ISBN\",\n      name: \"isbn\",\n      value: this.state.isbn,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Title\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      placeholder: \"Genre\",\n      name: \"genre_id\",\n      value: this.state.genre_id,\n      onChange: this.addGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.genreList())))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Author\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      placeholder: \"Author\",\n      name: \"author_id\",\n      value: this.state.author,\n      onChange: this.addAuthor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.authorList())))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formHorizontalover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Cover\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"file\",\n      placeholder: \"\",\n      name: \"Cover\",\n      onChange: this.onFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Add Book\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/N00160464/Desktop/CA2_Mo/src/views/books/Create.js"],"names":["React","Component","axios","Form","Row","Col","Button","InputGroup","Badge","Genre","props","genre","_id","name","Author","author","BookCreate","constructor","handleInputChange","e","target","value","type","checked","console","log","setState","state","author_id","onAddAuthor","selected","onSubmit","preventDefault","genreJSON","genres","map","index","authorJSON","authors","book","isbn","title","cover","defaults","headers","common","localStorage","getItem","post","then","res","data","window","location","catch","err","genre_id","authors_id","componentDidMount","get","result","genreList","currentGenre","authorList","currentAuthor","render","addGenre","addAuthor","onFileChange","span","offset"],"mappings":"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","sourcesContent":["/**\n * @Date:   2020-01-28T01:14:02+00:00\n * @Last modified time: 2020-02-11T16:05:33+00:00\n */\n\n\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Badge from 'react-bootstrap/Badge'\n\n\nconst Genre = props => (\n  <option value={props.genre._id}> {props.genre.name} </option>\n)\nconst Author = props => (\n  <option value={props.author._id}>{props.author.name}</option>\n)\n\nexport default class BookCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isbn: '',\n      title: '',\n      genres: [],\n      genre_id: [],\n      authors: [],\n      authors_id: []\n\n    };\n\n  }\n\n  componentDidMount(){\n\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios.get(`http://localhost:4000/books/authors`).then((result) => {\n      console.log(result);\n      this.setState({\n        authors: result.data\n      })\n    })\n      axios.get(`http://localhost:4000/books/genres`).then((genres) => {\n        console.log(genres);\n        this.setState({\n          genres: genres.data\n        })\n    });\n  };\n\n  handleInputChange = e => {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.author_id)\n  };\n\n  onAddAuthor = e => {\n    const target = e.target;\n    const value = target.type === 'selected' ? target.selected : target.value;\n    const name = target.name;\n\n    console.log(`Input name ${name}. Input value ${value}.`);\n\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state.author_id)\n};\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    let genreJSON = this.state.genres.map((name, index) => {\n      return {name};\n    })\n    let authorJSON = this.state.authors.map((name, index) => {\n      return {name};\n    })\n\n    const book = {\n      isbn: this.state.isbn,\n      title: this.state.title,\n      genre: genreJSON,\n      author: authorJSON,\n      cover: this.state.cover\n    }\n\n    console.log(book);\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken')\n\n    axios.post('http://localhost:4000/books/', book)\n      .then(res => {\n        console.log(res.data)\n        window.location = '/';\n      })\n      .catch(err => {\n        console.log(err)\n      //  window.location = '/books/create';\n    });\n\n    // window.location = '/';\n  };\n\n\n  genreList() {\n    return this.state.genres.map((currentGenre, index) => {\n      return <Genre genre={currentGenre} key={index} />;\n    })\n  }\n  authorList() {\n    return this.state.authors.map((currentAuthor, index) => {\n      return <Author author={currentAuthor} key={index} />;\n    })\n  }\n\n  render() {\n\n    return (\n    <div>\n      <h3>Add new Book</h3>\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group as={Row} controlId=\"formHorizontalISBN\">\n          <Form.Label column sm={2}>\n            ISBN\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\" placeholder=\"ISBN\"\n              name=\"isbn\"\n              value={this.state.isbn}\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n          <Form.Label column sm={2}>\n            Title\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\" placeholder=\"Title\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleInputChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalGenre\">\n          <Form.Label column sm={2}>\n            Genre\n          </Form.Label>\n          <Col sm={4}>\n            <InputGroup>\n              <Form.Control as=\"select\" multiple placeholder=\"Genre\"\n                name=\"genre_id\"\n                value={this.state.genre_id}\n                onChange={this.addGenre}\n              >\n\n                { this.genreList() }\n\n              </Form.Control>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalAuthor\">\n          <Form.Label column sm={2}>\n            Author\n          </Form.Label>\n          <Col sm={4}>\n            <InputGroup>\n              <Form.Control as=\"select\" multiple placeholder=\"Author\"\n                name=\"author_id\"\n                value={this.state.author}\n                onChange={this.addAuthor}\n              >\n\n        { this.authorList() }\n\n              </Form.Control>\n            </InputGroup>\n          </Col>\n        </Form.Group>\n\n\n        <Form.Group as={Row} controlId=\"formHorizontalover\">\n          <Form.Label column sm={2}>\n            Cover\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"file\" placeholder=\"\"\n              name=\"Cover\"\n\n              onChange={this.onFileChange}\n            />\n          </Col>\n        </Form.Group>\n        <br/>\n        <Form.Group as={Row}>\n          <Col sm={{ span: 10, offset: 2 }}>\n            <Button type=\"submit\">Add Book</Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}